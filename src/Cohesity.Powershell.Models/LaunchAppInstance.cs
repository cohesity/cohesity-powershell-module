// Copyright 2019 Cohesity Inc.


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Cohesity.Model
{
    /// <summary>
    /// Specifies app instance parameters.
    /// </summary>
    [DataContract]
    public partial class LaunchAppInstance :  IEquatable<LaunchAppInstance>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LaunchAppInstance" /> class.
        /// </summary>
        /// <param name="appUid">Specifies the app Id..</param>
        /// <param name="appVersion">Specifies the app version..</param>
        /// <param name="creationUid">Specifies unique identifier generated by the client to let the backend distinguish retries of the creation of the app instance..</param>
        /// <param name="deploymentParameters">Specifies deployment parameters for launch of the application.</param>
        /// <param name="description">Specifies user configured description for the app instance..</param>
        /// <param name="settings">settings.</param>
        public LaunchAppInstance(long? appUid = default(long?), long? appVersion = default(long?), string creationUid = default(string), string deploymentParameters = default(string), string description = default(string), AppInstanceSettings settings = default(AppInstanceSettings))
        {
            this.AppUid = appUid;
            this.AppVersion = appVersion;
            this.CreationUid = creationUid;
            this.DeploymentParameters = deploymentParameters;
            this.Description = description;
            this.Settings = settings;
        }
        
        /// <summary>
        /// Specifies the app Id.
        /// </summary>
        /// <value>Specifies the app Id.</value>
        [DataMember(Name="appUid", EmitDefaultValue=true)]
        public long? AppUid { get; set; }

        /// <summary>
        /// Specifies the app version.
        /// </summary>
        /// <value>Specifies the app version.</value>
        [DataMember(Name="appVersion", EmitDefaultValue=true)]
        public long? AppVersion { get; set; }

        /// <summary>
        /// Specifies unique identifier generated by the client to let the backend distinguish retries of the creation of the app instance.
        /// </summary>
        /// <value>Specifies unique identifier generated by the client to let the backend distinguish retries of the creation of the app instance.</value>
        [DataMember(Name="creationUid", EmitDefaultValue=true)]
        public string CreationUid { get; set; }

        /// <summary>
        /// Specifies deployment parameters for launch of the application
        /// </summary>
        /// <value>Specifies deployment parameters for launch of the application</value>
        [DataMember(Name="deploymentParameters", EmitDefaultValue=true)]
        public string DeploymentParameters { get; set; }

        /// <summary>
        /// Specifies user configured description for the app instance.
        /// </summary>
        /// <value>Specifies user configured description for the app instance.</value>
        [DataMember(Name="description", EmitDefaultValue=true)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Settings
        /// </summary>
        [DataMember(Name="settings", EmitDefaultValue=false)]
        public AppInstanceSettings Settings { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString() { return ToJson(); }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LaunchAppInstance);
        }

        /// <summary>
        /// Returns true if LaunchAppInstance instances are equal
        /// </summary>
        /// <param name="input">Instance of LaunchAppInstance to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LaunchAppInstance input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AppUid == input.AppUid ||
                    (this.AppUid != null &&
                    this.AppUid.Equals(input.AppUid))
                ) && 
                (
                    this.AppVersion == input.AppVersion ||
                    (this.AppVersion != null &&
                    this.AppVersion.Equals(input.AppVersion))
                ) && 
                (
                    this.CreationUid == input.CreationUid ||
                    (this.CreationUid != null &&
                    this.CreationUid.Equals(input.CreationUid))
                ) && 
                (
                    this.DeploymentParameters == input.DeploymentParameters ||
                    (this.DeploymentParameters != null &&
                    this.DeploymentParameters.Equals(input.DeploymentParameters))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.Settings == input.Settings ||
                    (this.Settings != null &&
                    this.Settings.Equals(input.Settings))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AppUid != null)
                    hashCode = hashCode * 59 + this.AppUid.GetHashCode();
                if (this.AppVersion != null)
                    hashCode = hashCode * 59 + this.AppVersion.GetHashCode();
                if (this.CreationUid != null)
                    hashCode = hashCode * 59 + this.CreationUid.GetHashCode();
                if (this.DeploymentParameters != null)
                    hashCode = hashCode * 59 + this.DeploymentParameters.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.Settings != null)
                    hashCode = hashCode * 59 + this.Settings.GetHashCode();
                return hashCode;
            }
        }

    }

}

